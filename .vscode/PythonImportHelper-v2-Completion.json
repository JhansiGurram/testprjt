[
    {
        "label": "boto3",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "boto3",
        "description": "boto3",
        "detail": "boto3",
        "documentation": {}
    },
    {
        "label": "mysql.connector",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "mysql.connector",
        "description": "mysql.connector",
        "detail": "mysql.connector",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "client",
        "kind": 5,
        "importPath": "boto3 files.RDS",
        "description": "boto3 files.RDS",
        "peekOfCode": "client = boto3.client('rds')\n\"\"\"\nresponse = client.create_db_instance(\n        AllocatedStorage=10,\n        DBInstanceIdentifier=Database,\n        DBInstanceClass=\"db.t2.micro\",\n        Engine=\"mysql\",\n        MasterUsername='root',\n        MasterUserPassword='employee123',\n        Port=3306",
        "detail": "boto3 files.RDS",
        "documentation": {}
    },
    {
        "label": "response",
        "kind": 5,
        "importPath": "boto3 files.RDS",
        "description": "boto3 files.RDS",
        "peekOfCode": "response = client.create_db_instance(\n        AllocatedStorage=10,\n        DBInstanceIdentifier=Database,\n        DBInstanceClass=\"db.t2.micro\",\n        Engine=\"mysql\",\n        MasterUsername='root',\n        MasterUserPassword='employee123',\n        Port=3306\n)\nprint (response)",
        "detail": "boto3 files.RDS",
        "documentation": {}
    },
    {
        "label": "db_conn",
        "kind": 5,
        "importPath": "boto3 files.RDS",
        "description": "boto3 files.RDS",
        "peekOfCode": "db_conn = mysql.connector.connect(\n    host='empdatabase.cjqjmoxodmld.us-east-1.rds.amazonaws.com',\n    port=3306,\n    user='root',\n    password='employee123',\n)\ncursor=db_conn.cursor()\ncreate_db_command = \"CREATE DATABASE empDB;\"\n# Execute the SQL command to create the database\ncursor.execute(create_db_command)",
        "detail": "boto3 files.RDS",
        "documentation": {}
    },
    {
        "label": "create_db_command",
        "kind": 5,
        "importPath": "boto3 files.RDS",
        "description": "boto3 files.RDS",
        "peekOfCode": "create_db_command = \"CREATE DATABASE empDB;\"\n# Execute the SQL command to create the database\ncursor.execute(create_db_command)\n\"\"\"\ncreate_table = \"\"\"\n#CREATE TABLE Employee (\n#  emp_id VARCHAR(255) PRIMARY KEY,\n#  first_name VARCHAR(255),\n# last_name VARCHAR(255),\n#  pri_skill VARCHAR(255),",
        "detail": "boto3 files.RDS",
        "documentation": {}
    },
    {
        "label": "create_table",
        "kind": 5,
        "importPath": "boto3 files.RDS",
        "description": "boto3 files.RDS",
        "peekOfCode": "create_table = \"\"\"\n#CREATE TABLE Employee (\n#  emp_id VARCHAR(255) PRIMARY KEY,\n#  first_name VARCHAR(255),\n# last_name VARCHAR(255),\n#  pri_skill VARCHAR(255),\n#  Company VARCHAR(255)\n#)\"\"\"\n\"\"\"\ncursor.execute(create_table)",
        "detail": "boto3 files.RDS",
        "documentation": {}
    },
    {
        "label": "createSecret",
        "kind": 2,
        "importPath": "boto3 files.Secret_manager",
        "description": "boto3 files.Secret_manager",
        "peekOfCode": "def createSecret():\n    response = client.create_secret(\n        Name='Testst1',\n        SecretString='{\"username\": \"root\", \"password\": \"employee123\"}'\n    )\n    return response\n#createresp = createSecret()\n#print(createresp)\nresponse = client.get_secret_value(\n  SecretId='Testsecret1'",
        "detail": "boto3 files.Secret_manager",
        "documentation": {}
    },
    {
        "label": "client",
        "kind": 5,
        "importPath": "boto3 files.Secret_manager",
        "description": "boto3 files.Secret_manager",
        "peekOfCode": "client = boto3.client('secretsmanager')\ndef createSecret():\n    response = client.create_secret(\n        Name='Testst1',\n        SecretString='{\"username\": \"root\", \"password\": \"employee123\"}'\n    )\n    return response\n#createresp = createSecret()\n#print(createresp)\nresponse = client.get_secret_value(",
        "detail": "boto3 files.Secret_manager",
        "documentation": {}
    },
    {
        "label": "#createresp",
        "kind": 5,
        "importPath": "boto3 files.Secret_manager",
        "description": "boto3 files.Secret_manager",
        "peekOfCode": "#createresp = createSecret()\n#print(createresp)\nresponse = client.get_secret_value(\n  SecretId='Testsecret1'\n   )\ndatabase_secrets = json.loads(response['SecretString'])\nUser = database_secrets['username']\nresponse = client.get_secret_value(\n    SecretId='Testsecret1'\n    )",
        "detail": "boto3 files.Secret_manager",
        "documentation": {}
    },
    {
        "label": "response",
        "kind": 5,
        "importPath": "boto3 files.Secret_manager",
        "description": "boto3 files.Secret_manager",
        "peekOfCode": "response = client.get_secret_value(\n  SecretId='Testsecret1'\n   )\ndatabase_secrets = json.loads(response['SecretString'])\nUser = database_secrets['username']\nresponse = client.get_secret_value(\n    SecretId='Testsecret1'\n    )\ndatabase_secrets = json.loads(response['SecretString'])\npwd = database_secrets['password']",
        "detail": "boto3 files.Secret_manager",
        "documentation": {}
    },
    {
        "label": "database_secrets",
        "kind": 5,
        "importPath": "boto3 files.Secret_manager",
        "description": "boto3 files.Secret_manager",
        "peekOfCode": "database_secrets = json.loads(response['SecretString'])\nUser = database_secrets['username']\nresponse = client.get_secret_value(\n    SecretId='Testsecret1'\n    )\ndatabase_secrets = json.loads(response['SecretString'])\npwd = database_secrets['password']\nprint(User)\nprint(pwd)",
        "detail": "boto3 files.Secret_manager",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "boto3 files.Secret_manager",
        "description": "boto3 files.Secret_manager",
        "peekOfCode": "User = database_secrets['username']\nresponse = client.get_secret_value(\n    SecretId='Testsecret1'\n    )\ndatabase_secrets = json.loads(response['SecretString'])\npwd = database_secrets['password']\nprint(User)\nprint(pwd)",
        "detail": "boto3 files.Secret_manager",
        "documentation": {}
    },
    {
        "label": "response",
        "kind": 5,
        "importPath": "boto3 files.Secret_manager",
        "description": "boto3 files.Secret_manager",
        "peekOfCode": "response = client.get_secret_value(\n    SecretId='Testsecret1'\n    )\ndatabase_secrets = json.loads(response['SecretString'])\npwd = database_secrets['password']\nprint(User)\nprint(pwd)",
        "detail": "boto3 files.Secret_manager",
        "documentation": {}
    },
    {
        "label": "database_secrets",
        "kind": 5,
        "importPath": "boto3 files.Secret_manager",
        "description": "boto3 files.Secret_manager",
        "peekOfCode": "database_secrets = json.loads(response['SecretString'])\npwd = database_secrets['password']\nprint(User)\nprint(pwd)",
        "detail": "boto3 files.Secret_manager",
        "documentation": {}
    },
    {
        "label": "pwd",
        "kind": 5,
        "importPath": "boto3 files.Secret_manager",
        "description": "boto3 files.Secret_manager",
        "peekOfCode": "pwd = database_secrets['password']\nprint(User)\nprint(pwd)",
        "detail": "boto3 files.Secret_manager",
        "documentation": {}
    },
    {
        "label": "ec2",
        "kind": 5,
        "importPath": "boto3 files.ec2",
        "description": "boto3 files.ec2",
        "peekOfCode": "ec2 = boto3.resource('ec2')\ninstance = ec2.create_instances(\n        ImageId='ami-02396cdd13e9a1257',\n        key_name = 'test-pair' ,\n        MinCount=1,\n        MaxCount=1,\n        InstanceType='t2.micro'\n)\nprint(instance)",
        "detail": "boto3 files.ec2",
        "documentation": {}
    },
    {
        "label": "instance",
        "kind": 5,
        "importPath": "boto3 files.ec2",
        "description": "boto3 files.ec2",
        "peekOfCode": "instance = ec2.create_instances(\n        ImageId='ami-02396cdd13e9a1257',\n        key_name = 'test-pair' ,\n        MinCount=1,\n        MaxCount=1,\n        InstanceType='t2.micro'\n)\nprint(instance)",
        "detail": "boto3 files.ec2",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "application",
        "description": "application",
        "peekOfCode": "def home():\n    return render_template('AddEmp.html')\n@app.route(\"/addemployee\", methods=['GET','POST'])\ndef AddEmployee():\n    return render_template('AddEmp.html')\n@app.route(\"/addemp\", methods=['POST'])\ndef AddEmp():\n    emp_id = request.form['emp_id']\n    first_name = request.form['first_name']\n    last_name = request.form['last_name']",
        "detail": "application",
        "documentation": {}
    },
    {
        "label": "AddEmployee",
        "kind": 2,
        "importPath": "application",
        "description": "application",
        "peekOfCode": "def AddEmployee():\n    return render_template('AddEmp.html')\n@app.route(\"/addemp\", methods=['POST'])\ndef AddEmp():\n    emp_id = request.form['emp_id']\n    first_name = request.form['first_name']\n    last_name = request.form['last_name']\n    pri_skill = request.form['pri_skill']\n    Company = request.form['Company']\n    add_data = \"INSERT INTO Emp ( emp_id ,first_name, last_name, pri_skill, Company) VALUES (%s, %s, %s, %s, %s)\"",
        "detail": "application",
        "documentation": {}
    },
    {
        "label": "AddEmp",
        "kind": 2,
        "importPath": "application",
        "description": "application",
        "peekOfCode": "def AddEmp():\n    emp_id = request.form['emp_id']\n    first_name = request.form['first_name']\n    last_name = request.form['last_name']\n    pri_skill = request.form['pri_skill']\n    Company = request.form['Company']\n    add_data = \"INSERT INTO Emp ( emp_id ,first_name, last_name, pri_skill, Company) VALUES (%s, %s, %s, %s, %s)\"\n    data = (emp_id, first_name, last_name, pri_skill, Company)\n    cursor = db_conn.cursor()\n    cursor.execute(add_data, data)",
        "detail": "application",
        "documentation": {}
    },
    {
        "label": "GetEmployee",
        "kind": 2,
        "importPath": "application",
        "description": "application",
        "peekOfCode": "def GetEmployee():\n    return render_template('GetEmp.html')\n@app.route(\"/fetchdata\", methods=['POST'])\ndef GetEmp():\n    cursor = db_conn.cursor()\n    emp_id = request.form['emp_id']\n    query = \"SELECT * FROM Emp WHERE emp_id = %s\"\n    try:\n        cursor.execute(query, (emp_id,))\n        myresult = cursor.fetchall()",
        "detail": "application",
        "documentation": {}
    },
    {
        "label": "GetEmp",
        "kind": 2,
        "importPath": "application",
        "description": "application",
        "peekOfCode": "def GetEmp():\n    cursor = db_conn.cursor()\n    emp_id = request.form['emp_id']\n    query = \"SELECT * FROM Emp WHERE emp_id = %s\"\n    try:\n        cursor.execute(query, (emp_id,))\n        myresult = cursor.fetchall()\n        print(myresult)\n    except Exception as e:\n        return str(e)",
        "detail": "application",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "application",
        "description": "application",
        "peekOfCode": "app = Flask(__name__)\nclient = boto3.client('secretsmanager')\nresponse = client.get_secret_value(\n  SecretId='Testst1'\n   )\ndatabase_secrets = json.loads(response['SecretString'])\nusername = database_secrets['username']\nresponse = client.get_secret_value(\n    SecretId='Testst1'\n    )",
        "detail": "application",
        "documentation": {}
    },
    {
        "label": "client",
        "kind": 5,
        "importPath": "application",
        "description": "application",
        "peekOfCode": "client = boto3.client('secretsmanager')\nresponse = client.get_secret_value(\n  SecretId='Testst1'\n   )\ndatabase_secrets = json.loads(response['SecretString'])\nusername = database_secrets['username']\nresponse = client.get_secret_value(\n    SecretId='Testst1'\n    )\ndatabase_secrets = json.loads(response['SecretString'])",
        "detail": "application",
        "documentation": {}
    },
    {
        "label": "response",
        "kind": 5,
        "importPath": "application",
        "description": "application",
        "peekOfCode": "response = client.get_secret_value(\n  SecretId='Testst1'\n   )\ndatabase_secrets = json.loads(response['SecretString'])\nusername = database_secrets['username']\nresponse = client.get_secret_value(\n    SecretId='Testst1'\n    )\ndatabase_secrets = json.loads(response['SecretString'])\npassword = database_secrets['password']",
        "detail": "application",
        "documentation": {}
    },
    {
        "label": "database_secrets",
        "kind": 5,
        "importPath": "application",
        "description": "application",
        "peekOfCode": "database_secrets = json.loads(response['SecretString'])\nusername = database_secrets['username']\nresponse = client.get_secret_value(\n    SecretId='Testst1'\n    )\ndatabase_secrets = json.loads(response['SecretString'])\npassword = database_secrets['password']\ndb_conn = mysql.connector.connect(\n    host=hostname,\n    port=3306,",
        "detail": "application",
        "documentation": {}
    },
    {
        "label": "username",
        "kind": 5,
        "importPath": "application",
        "description": "application",
        "peekOfCode": "username = database_secrets['username']\nresponse = client.get_secret_value(\n    SecretId='Testst1'\n    )\ndatabase_secrets = json.loads(response['SecretString'])\npassword = database_secrets['password']\ndb_conn = mysql.connector.connect(\n    host=hostname,\n    port=3306,\n    user=username,",
        "detail": "application",
        "documentation": {}
    },
    {
        "label": "response",
        "kind": 5,
        "importPath": "application",
        "description": "application",
        "peekOfCode": "response = client.get_secret_value(\n    SecretId='Testst1'\n    )\ndatabase_secrets = json.loads(response['SecretString'])\npassword = database_secrets['password']\ndb_conn = mysql.connector.connect(\n    host=hostname,\n    port=3306,\n    user=username,\n    password=password,",
        "detail": "application",
        "documentation": {}
    },
    {
        "label": "database_secrets",
        "kind": 5,
        "importPath": "application",
        "description": "application",
        "peekOfCode": "database_secrets = json.loads(response['SecretString'])\npassword = database_secrets['password']\ndb_conn = mysql.connector.connect(\n    host=hostname,\n    port=3306,\n    user=username,\n    password=password,\n    database=Database)\n@app.route(\"/\", methods=['GET', 'POST'])\ndef home():",
        "detail": "application",
        "documentation": {}
    },
    {
        "label": "password",
        "kind": 5,
        "importPath": "application",
        "description": "application",
        "peekOfCode": "password = database_secrets['password']\ndb_conn = mysql.connector.connect(\n    host=hostname,\n    port=3306,\n    user=username,\n    password=password,\n    database=Database)\n@app.route(\"/\", methods=['GET', 'POST'])\ndef home():\n    return render_template('AddEmp.html')",
        "detail": "application",
        "documentation": {}
    },
    {
        "label": "db_conn",
        "kind": 5,
        "importPath": "application",
        "description": "application",
        "peekOfCode": "db_conn = mysql.connector.connect(\n    host=hostname,\n    port=3306,\n    user=username,\n    password=password,\n    database=Database)\n@app.route(\"/\", methods=['GET', 'POST'])\ndef home():\n    return render_template('AddEmp.html')\n@app.route(\"/addemployee\", methods=['GET','POST'])",
        "detail": "application",
        "documentation": {}
    }
]